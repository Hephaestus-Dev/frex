plugins {
	id 'fabric-loom' version '0.2.0-SNAPSHOT'
	id 'java'
	id 'maven'
	id 'maven-publish'
	//id 'com.github.johnrengelman.shadow' version '5.0.0'
	id "com.zoltu.git-versioning" version "3.0.3"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

def versionInfo = ZoltuGitVersioning.versionInfo
print versionInfo.toString(); //"${versionInfo.major}.${versionInfo.minor}.${versionInfo.commitCount}"

minecraft {
}

repositories {
    //flatDir {
    //    dirs '../fabric/build/libs'
    //}
    mavenCentral()
    maven {
      url = "http://maven.fabricmc.net/"
      name = "Fabric"
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	modCompile "net.fabricmc:fabric:${project.fabric_version}"
	
	compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
	
	//shadow "org.joml:joml:1.9.9"
	//implementation "org.joml:joml:1.9.9"
}

processResources {
	inputs.property "version", versionInfo.toString()

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": versionInfo.toString()
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

//task sourcesJar(type: Jar) {
//	baseName = archivesBaseName
//	classifier = "sources"
//	from sourceSets.main.allSource
//	from sourceSets.main.resources
//}

jar {
	from "LICENSE"
}

//sourceSets {
//	main {
//	        java {
//	            include 'grondag/**/*'
//	            exclude '*.DS_Store'
//	        }
//	        resources
//	        {
//	        	include '**/*'
//	        	exclude '*.DS_Store'
//	        }
//	    }
//    test {
//        java {
//            exclude 'grondag/**'
//        }
//    }
//}


//tasks.jar.configure {
//  classifier = 'default'
//}

//shadowJar {
//	classifier = null
//	configurations = [project.configurations.shadow]
//}

//remapJar {
//	dependsOn shadowJar
//	jar = shadowJar.archivePath
//}

publishing {
    publications {
        mavenJava(MavenPublication) {
            //version project.version
            //artifactId project.archivesBaseName
            //groupId project.group
            //from components.java

          //  artifact sourcesJar {
          //      classifier "sources"
          //  }
            
          //  artifact shadowJar {
          //      classifier null
          //  }
            
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
        }
    }

    repositories {
        maven {
            url "https://grondag-repo.appspot.com"
            credentials {
	            username "admin"
	            password "${maven_password}"
			}
        }
    }
}